spring:
  datasource:
    url: jdbc:mysql://localhost:3308/membership?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: root
    password: 1234
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000 # 5분 (300000ms)
      connection-timeout: 20000 # 20초 (20000ms)
      max-lifetime: 1200000 # 20분 (1200000ms)

  jpa:
    hibernate:
      ddl-auto: update # 개발 환경에서만 권장, 프로덕션에서는 'none' 및 마이그레이션 도구 사용
    show-sql: true
    properties:
      hibernate:
        jdbc:
          batch_size: 100   # ✅ 몇 건씩 묶을지 (성능에 따라 조정)
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect # MySQL 8 버전에 맞는 방언

  batch:
    job:
      enabled: false # Spring Batch Job 자동 실행 비활성화
    jdbc:
      initialize-schema: always # Spring Batch 메타데이터 테이블 초기화 (개발 환경에서 편리)

server:
  port: 8080 # 애플리케이션이 실행될 포트

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus # Actuator 엔드포인트 노출 설정
  prometheus: # Spring Boot 3.x 이상에서 권장되는 Prometheus 설정 위치
    metrics:
      export:
        enabled: true # Prometheus 메트릭 내보내기 활성화

logging:
  level:
    org.hibernate.SQL: DEBUG # Hibernate SQL 쿼리 로깅
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE # SQL 바인딩 파라미터 값 로깅 (디버깅에 유용하나, 프로덕션에서는 주의)
    org.springframework.batch: DEBUG # Spring Batch 관련 로깅